AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC with one public and one private subnet, NAT Instance setup"

Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the NAT instance"
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/20
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ilim-vpc

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ilim-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ilim-public-subnet

  # Private Subnet
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.2.0/24"
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: ilim-private-subnet

  # Private Subnet
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.3.0/24"
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: ilim-private-subnet

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ilim-public-route-table

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ilim-private-route-table

  # Routes
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      InstanceId: !Ref NATInstance

  # Subnet Associations
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # Security Groups
  NATSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH and HTTP(S) traffic to NAT instance"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "185.156.46.156/24"  # Put here your IP for SSH access
      Tags:
        - Key: Name
          Value: ilim-nat-sg

  # NAT Instance
  NATInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro          # 1 vCPU, 1GiB - We can also use t2.small which has 2GiB and costs 0.023 USD/Hour
      SubnetId: !Ref PublicSubnet
      ImageId: ami-063d43db0594b521b  # Amazon Linux 2023 Image
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref NATSecurityGroup
      SourceDestCheck: false
      Tags:
        - Key: Name
          Value: ilim-nat-instance
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y iptables-services
          service iptables stop
          chkconfig iptables off
          sysctl -w net.ipv4.ip_forward=1
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

Outputs:
  VPCID:
    Description: "VPC ID"
    Value: !Ref VPC

  PublicSubnetID:
    Description: "Public Subnet ID"
    Value: !Ref PublicSubnet

  PrivateSubnet1ID:
    Description: "Private Subnet ID"
    Value: !Ref PrivateSubnet1


  PrivateSubnet2ID:
    Description: "Private Subnet ID"
    Value: !Ref PrivateSubnet2

  NATInstanceID:
    Description: "NAT Instance ID"
    Value: !Ref NATInstance
